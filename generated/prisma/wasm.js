
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.0
 * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
 */
Prisma.prismaVersion = {
  client: "6.11.0",
  engine: "9c30299f5a0ea26a96790e13f796dc6094db3173"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DonationScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  date: 'date',
  email: 'email',
  userId: 'userId'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  date: 'date',
  location: 'location',
  createdAt: 'createdAt',
  createdById: 'createdById'
};

exports.Prisma.InterventionProposalScalarFieldEnum = {
  id: 'id',
  jobTitle: 'jobTitle',
  description: 'description',
  domain: 'domain',
  status: 'status',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.MediaFeedbackScalarFieldEnum = {
  id: 'id',
  mediaGallery: 'mediaGallery',
  caption: 'caption',
  eventId: 'eventId'
};

exports.Prisma.RegistrationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  eventId: 'eventId'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  linkOrFile: 'linkOrFile',
  createdAt: 'createdAt',
  createdById: 'createdById'
};

exports.Prisma.TestimonialScalarFieldEnum = {
  id: 'id',
  content: 'content',
  authorName: 'authorName',
  createdAt: 'createdAt',
  createdById: 'createdById'
};

exports.Prisma.ThematicScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  status: 'status',
  isNewsletterSubscriber: 'isNewsletterSubscriber',
  createdAt: 'createdAt'
};

exports.Prisma.VolunteerApplicationScalarFieldEnum = {
  id: 'id',
  desiredRoles: 'desiredRoles',
  motivation: 'motivation',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.VolunteerAssignmentScalarFieldEnum = {
  id: 'id',
  role: 'role',
  tasks: 'tasks',
  notes: 'notes',
  createdAt: 'createdAt',
  eventId: 'eventId',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.DonationOrderByRelevanceFieldEnum = {
  email: 'email'
};

exports.Prisma.EventOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  location: 'location'
};

exports.Prisma.InterventionProposalOrderByRelevanceFieldEnum = {
  jobTitle: 'jobTitle',
  description: 'description'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.MediaFeedbackOrderByRelevanceFieldEnum = {
  mediaGallery: 'mediaGallery',
  caption: 'caption'
};

exports.Prisma.ResourceOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  linkOrFile: 'linkOrFile'
};

exports.Prisma.TestimonialOrderByRelevanceFieldEnum = {
  content: 'content',
  authorName: 'authorName'
};

exports.Prisma.ThematicOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password'
};

exports.Prisma.VolunteerApplicationOrderByRelevanceFieldEnum = {
  desiredRoles: 'desiredRoles',
  motivation: 'motivation',
  notes: 'notes'
};

exports.Prisma.VolunteerAssignmentOrderByRelevanceFieldEnum = {
  tasks: 'tasks',
  notes: 'notes'
};
exports.Domain = exports.$Enums.Domain = {
  IT: 'IT',
  MARKETING: 'MARKETING',
  DESIGN: 'DESIGN',
  EDUCATION: 'EDUCATION',
  HEALTH: 'HEALTH',
  OTHER: 'OTHER'
};

exports.ProposalStatus = exports.$Enums.ProposalStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED'
};

exports.ResourceType = exports.$Enums.ResourceType = {
  ARTICLE: 'ARTICLE',
  GUIDE: 'GUIDE',
  RECOMMENDATION: 'RECOMMENDATION',
  PORTRAIT: 'PORTRAIT'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ADMIN: 'ADMIN',
  VISITOR: 'VISITOR',
  VOLUNTEER: 'VOLUNTEER',
  MEMBER: 'MEMBER',
  PROFESSIONAL: 'PROFESSIONAL'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED'
};

exports.VolunteerRole = exports.$Enums.VolunteerRole = {
  ACCUEIL: 'ACCUEIL',
  LOGISTIQUE: 'LOGISTIQUE',
  SOUTIEN: 'SOUTIEN',
  COMMUNICATION: 'COMMUNICATION',
  AUTRE: 'AUTRE'
};

exports.Prisma.ModelName = {
  Donation: 'Donation',
  Event: 'Event',
  InterventionProposal: 'InterventionProposal',
  MediaFeedback: 'MediaFeedback',
  Registration: 'Registration',
  Resource: 'Resource',
  Testimonial: 'Testimonial',
  Thematic: 'Thematic',
  User: 'User',
  VolunteerApplication: 'VolunteerApplication',
  VolunteerAssignment: 'VolunteerAssignment'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
