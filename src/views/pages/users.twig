{# 
  Template d'affichage de la liste des utilisateurs.
  √âtend la base d'administration adminBase.twig.
  Affiche une liste avec options de recherche, filtres par statut, et actions CRUD.
#}

{% extends 'layouts/adminBase.twig' %}

{% block style %}
  {# CSS sp√©cifique √† la page utilisateurs #}
  <link rel="stylesheet" href="/assets/css/users.css"/>
  <style>
    /* Style simple pour les badges de statut */
    .badge {
      padding: 3px 8px;
      border-radius: 12px;
      color: white;
      font-weight: 600;
      font-size: 0.85em;
      display: inline-block;
      text-transform: capitalize;
    }
    .badge-admin { background-color: #e74c3c; }       /* rouge */
    .badge-volunteer { background-color: #3498db; }  /* bleu */
    .badge-member { background-color: #2ecc71; }     /* vert */
    /* Message quand aucun r√©sultat trouv√© */
    .empty-message {
      text-align: center;
      font-style: italic;
      color: #666;
      padding: 15px 0;
    }
  </style>
{% endblock %}

{% block main %}
  <main class="page-main">
    <div class="container">

      <a href="/dashboard" class="back-link">‚Üê Retour</a>

      <div class="header">
        <div>
          <h1>Gestion des utilisateurs</h1>
          <p class="subtitle">G√©rez les participants, membres, b√©n√©voles et donateurs</p>
        </div>
        <div class="header-actions">
          {# Bouton CSV activ√© par JS avec les cases coch√©es #}
          <button id="export-csv-btn" class="btn btn-secondary">Exporter CSV</button>
          <a href="/create" class="btn btn-primary">+ Cr√©er un utilisateur</a>
        </div>
      </div>

      {# Formulaire de filtres - recherche texte + filtre statut #}
      <form method="get" class="filters">
        <div class="search-container">
          <span class="search-icon">üîç</span>
          <input type="text" id="user-search" name="search" placeholder="Rechercher un utilisateur‚Ä¶" class="search-input"/>
        </div>

        <select name="status" class="filter-select" onchange="this.form.submit()">
          <option value="">Tous les statuts</option>
          {% for status in statuses %}
            <option 
              value="{{ status|lower }}"
              {% if selectedStatus and selectedStatus|lower == status|lower %}selected{% endif %}
            >
              {{ status|capitalize }}
            </option>
          {% endfor %}
        </select>
      </form>

      {# Tableau utilisateurs #}
      <table class="user-table" style="width: 100%; border-collapse: collapse;">
        <thead>
          <tr>
            <th><input type="checkbox" id="select-all"/></th>
            <th>Pr√©nom</th>
            <th>Nom</th>
            <th>E-mail</th>
            <th>Statut</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="users-tbody">
          {% for user in users %}
            <tr>
              <td><input type="checkbox" class="user-checkbox" value="{{ user.id }}"/></td>
              <td>{{ user.firstName }}</td>
              <td>{{ user.lastName }}</td>
              <td>{{ user.email }}</td>
              <td>
                <span class="badge badge-{{ user.status|lower }}">{{ user.status }}</span>
              </td>
              <td>
                <a href="/{{ user.id }}" title="Voir">üëÅÔ∏è</a>
                <a href="/{{ user.id }}/edit" title="Modifier">‚úèÔ∏è</a>
                <form action="/{{ user.id }}/delete" method="post" style="display:inline;">
                  <button type="submit" title="Supprimer" class="delete-btn">üóëÔ∏è</button>
                </form>
              </td>
            </tr>
          {% else %}
            <tr>
              <td colspan="6" class="empty-message">Aucun utilisateur trouv√©.</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <div class="pagination">
        <a href="#" class="page-link">‚Üê Pr√©c√©dent</a>
        <a href="#" class="page-link active">1</a>
        <a href="#" class="page-link">2</a>
        <a href="#" class="page-link">3</a>
        <a href="#" class="page-link">Suivant ‚Üí</a>
      </div>
    </div>
  </main>

  {# üìú Script JS #}
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const selectAllCheckbox = document.getElementById('select-all');
      const searchInput = document.getElementById('user-search');
      const tbody = document.getElementById('users-tbody');
      let userRows = Array.from(tbody.querySelectorAll('tr'));

      // Fonction pour mettre √† jour la liste des lignes (apr√®s ajout/suppression DOM)
      function refreshUserRows() {
        userRows = Array.from(tbody.querySelectorAll('tr:not(.no-results-row)'));
      }

      // ‚úÖ Case principale coche/d√©coche toutes les cases visibles
      selectAllCheckbox.addEventListener('change', () => {
        userRows.forEach(row => {
          if (row.style.display !== 'none') {
            const cb = row.querySelector('.user-checkbox');
            if(cb) cb.checked = selectAllCheckbox.checked;
          }
        });
      });

      // üîç Recherche dynamique sur pr√©nom, nom, email
      searchInput.addEventListener('input', () => {
        const searchValue = searchInput.value.toLowerCase();
        let visibleCount = 0;

        userRows.forEach(row => {
          // Sauter la ligne de message ¬´ Aucun r√©sultat ¬ª si pr√©sente
          if(row.classList.contains('no-results-row')) return;

          const firstName = row.cells[1].textContent.toLowerCase();
          const lastName = row.cells[2].textContent.toLowerCase();
          const email = row.cells[3].textContent.toLowerCase();

          const match = firstName.includes(searchValue) || lastName.includes(searchValue) || email.includes(searchValue);
          if(match) {
            row.style.display = '';
            visibleCount++;
          } else {
            row.style.display = 'none';
          }
        });

        // G√©rer le message "Aucun r√©sultat"
        const emptyRow = tbody.querySelector('.no-results-row');
        if(visibleCount === 0) {
          if(!emptyRow) {
            const tr = document.createElement('tr');
            tr.classList.add('no-results-row');
            tr.innerHTML = `<td colspan="6" class="empty-message">Aucun r√©sultat trouv√©.</td>`;
            tbody.appendChild(tr);
          }
        } else {
          if(emptyRow) emptyRow.remove();
        }
      });

      // üì• Export CSV avec les utilisateurs coch√©s et visibles
      const exportBtn = document.getElementById('export-csv-btn');
      exportBtn.addEventListener('click', () => {
        const rows = [["ID", "Pr√©nom", "Nom", "Email", "Statut"]];
        let hasSelected = false;

        userRows.forEach(row => {
          if(row.style.display === 'none') return; // ignor√© si cach√©

          const checkbox = row.querySelector('.user-checkbox');
          if(checkbox && checkbox.checked) {
            hasSelected = true;
            rows.push([
              checkbox.value,
              row.cells[1].textContent.trim(),
              row.cells[2].textContent.trim(),
              row.cells[3].textContent.trim(),
              row.cells[4].textContent.trim(),
            ]);
          }
        });

        if(!hasSelected) {
          alert("Veuillez s√©lectionner au moins un utilisateur √† exporter.");
          return;
        }

        // G√©n√©ration CSV
        const csvContent = rows.map(e => e.map(field => `"${field.replace(/"/g, '""')}"`).join(",")).join("\n");
        const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
        const link = document.createElement("a");
        link.setAttribute("href", URL.createObjectURL(blob));
        link.setAttribute("download", "utilisateurs.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      });
    });
  </script>
{% endblock %}
